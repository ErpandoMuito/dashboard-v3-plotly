[project]
name = "dashboard-v3"
version = "0.1.0"
description = "Dashboard V3 com Plotly Dash para integração Tiny ERP"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Dashboard V3 Team", email = "team@dashboardv3.com" }
]
keywords = ["dashboard", "plotly", "dash", "tiny", "erp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "dash==2.14.2",
    "plotly==5.18.0", 
    "pandas==2.1.4",
    "requests==2.31.0",
    "gunicorn==21.2.0",
    "python-dotenv==1.0.0",
    "dash-bootstrap-components==1.5.0",
    "redis==5.0.1",
]

[project.scripts]
dashboard = "main:run_server"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[tool.uv.scripts]
dev = "python main.py"
start = "gunicorn main:server --bind 0.0.0.0:${PORT:-8050}"
format = "black . && ruff check . --fix"
lint = "black --check . && ruff check . && mypy ."
test = "pytest tests/ -v --cov=app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = ["tests"]
pythonpath = ["."]